# DEPENDENCIES ------------------------------------------------------------

library(tidyverse)
library(vroom)
library(ICPIutilities)
library(glue)

# IMPORT (don't forget to change direction from / to /------------------------------------------------------------------

  path <- "Data/MER_Structured_Datasets_PSNU_IM_FY18-21_20200918_v2_1_Zambia.zip"
  
  df <- vroom(path) 

# MUNGE -------------------------------------------------------------------
  
#filter
  df_fltr <- df %>% 
    filter(fundingagency == "USAID",
           fiscal_year == 2020,
           indicator %in% c("PrEP_NEW", "PrEP_CURR", "HTS_SELF", "HTS_TST",
                            "TX_NEW", "TX_CURR", "TX_PVLS", "PMTCT_ART"),
           standardizeddisaggregate %in% c("Total Numerator", "Total Denominator",
                                           "Modality/Age/Sex/Result", "Modality/Age Aggregated/Sex/Result",
                                           "KeyPop/HIVStatus", "Age/NewExistingArt/Sex/HIVStatus"))
#remove extra disaggs
  df_fltr <- df_fltr %>% 
    filter(!(indicator %in% c("HTS_TST", "PMTCT_ART") & 
               standardizeddisaggregate %in% c("Total Numerator", "Total Denominator"))) %>% 
    filter(!(indicator == "TX_PVLS" & standardizeddisaggregate == "Total Numerator"))
  
#check indicators/disaggs
  # df_fltr %>% 
  #   arrange(indicator) %>% 
  #   distinct(indicator, standardizeddisaggregate)
  
#include in var name
  df_fltr <- df_fltr %>% 
    mutate(indicator = ifelse(numeratordenom == "D", glue("{indicator}_{numeratordenom}"), indicator),
           suffix = case_when(!is.na(modality) ~ modality,
                              indicator == "PMTCT_ART" ~ otherdisaggregate,
                              str_detect(standardizeddisaggregate, "KeyPop") ~ "KP",
                              TRUE ~ "Total"),
           suffix = str_remove_all(suffix, "-|,| "))

#check suffix
  # df_fltr %>% 
  #   distinct(indicator, standardizeddisaggregate, otherdisaggregate, modality,suffix) %>% 
  #   print(n = Inf)
  
#aggregate
  df_agg <- df_fltr %>%
    filter(targets != 0) %>% 
    group_by(operatingunit, psnu, psnuuid, indicator, suffix) %>%
    summarise(targets = sum(targets, na.rm = TRUE)) %>% 
    ungroup()
  
#spread data
  df_wide <- df_agg %>% 
    pivot_wider(names_from = c(indicator, suffix),
                names_sep = ".",
                values_from = targets)
  
  # glimpse(df_wide)
  
#full column list to ensure match to file structure
  full_col_list <- c("operatingunit",
                     "psnu",
                     "psnuuid",
                     "PrEP_NEW.Total",
                     "PrEP_CURR.Total",
                     "HTS_SELF.Total",
                     "HTS_TST.MobileMod",
                     "HTS_TST.IndexMod",
                     "HTS_TST.Index",
                     "HTS_TST.PMTCTANC",
                     "HTS_TST.PostANC1",
                     "HTS_TST.STIClinic",
                     "HTS_TST.OtherPITC",
                     "HTS_TST.Inpat",
                     "TX_NEW.Total",
                     "TX_NEW.KP",
                     "TX_CURR.Total",
                     "TX_CURR.KP",
                     "PMTCT_ART.LifelongARTNew",
                     "PMTCT_ART.LifelongARTAlready",
                     "TX_PVLS_D.Total"
  )
  
  #modalities not in the template
    # "HTS_TST.EmergencyWard",
    # "HTS_TST.Malnutrition",
    # "HTS_TST.OtherMod",
    # "HTS_TST.Pediatric",
    # "HTS_TST.TBClinic",
    # "HTS_TST.VCT",
    # "HTS_TST.VCTMod",
    # "HTS_TST.VMMC",
  
#list of cols missing from the dataset
  missingscols <- setdiff(full_col_list, names(df_wide))
  
#add missing cols from the dataset
  df_wide[,missingscols]=NA
  
#arrange to match
  df_wide <- df_wide %>% 
    select(all_of(full_col_list))
  
#export
  write_csv(df_wide, 'Dataout/mer_targets.csv', na = "")
  
